// $ROOT = "[data-query-type='element']"
$ROOT = "*[data-query-type='element']"
$INACTIVE-ROOT = "*[data-query-type='media']"

$grid-breakpoints-prefix = {
    xs: view-xs,
    sm: view-sm,
    md: view-md,
    lg: view-lg,
    xl: view-xl
}
$breakpoint-hierarchy = xs sm md lg xl
$regex--only = '.*-only$'
$regex--and-up = '.*-and-up$'
$regex--and-down = '.*-and-down$'

getClass($key)
    $grid-breakpoints-prefix[$key]

Fallback()
    {$INACTIVE-ROOT} &
        {block}

Override($target-size)
    if (length(split('', $target-size))) == 2
        {$ROOT + '.' + getClass($target-size)} &
            {block}

    else
        $key = substr($target-size, 0, 2)
        $key-index = index($breakpoint-hierarchy, $key)
        if (match($regex--only, $target-size))
            $output = $ROOT
            for num in $key-index .. (length($breakpoint-hierarchy) - 1)
                $thisKey = $breakpoint-hierarchy[num]
                $val = '.' + getClass($thisKey)
                
                if (num == $key-index)
                    $output += $val
                else
                    $output += ':not(' + $val + ')'

            {$output} &
                {block}
        else
            $is-up = false

            if (match($regex--and-up, $target-size))
                $is-up = true
            else if (match($regex--and-down, $target-size))
                $is-up = false

            $start = $is-up ? 0 : $key-index + 1
            $end = $is-up ? $key-index - 1 : length($breakpoint-hierarchy) - 1
            $output = $ROOT

            for num in $start .. $end
                $thisKey = $breakpoint-hierarchy[num]
                $val = getClass($thisKey)

                {$ROOT + ':not(.' + $val + ') &'}
                    {block}

// TEST CASE
.flex.hidden-md-only
    +Override(md-only)
        width: 10px

.flex.hidden-md-and-up
    +Override(md-and-up)
        width: 10px

.flex.hidden-md-and-down
    +Override(md-and-down)
        width: 10px