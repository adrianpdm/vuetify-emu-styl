$ROOT = '.emulator'

$grid-breakpoints-prefix = {
    xs: view-xs,
    sm: view-sm,
    md: view-md,
    lg: view-lg,
    xl: view-xl
}
$breakpoint-hierarchy = xs sm md lg xl
$regex--only = '.*-only$'
$regex--and-up = '.*-and-up$'
$regex--and-down = '.*-and-down$'

getClass($key){
    $grid-breakpoints-prefix[$key]
}

Override($target-size)
    if (length(split('', $target-size))) == 2
        .{getClass($target-size)} &
            {block}

    $key = substr($target-size, 0, 2)
    $key-index = index($breakpoint-hierarchy, $key)
    if (match($regex--only, $target-size))
        $selector = $ROOT
        for num in 0 .. (length($breakpoint-hierarchy) - 1)
            $thisKey = $breakpoint-hierarchy[num]
            $thisValue = getClass($thisKey)
            $result = '.' + $thisValue
            
            if (num <= $key-index)
                $selector += $result
            else
                $selector += ':not(' + $result + ')'
        {$selector} &
            {block}
    else
        $is-up = false

        if (match($regex--and-up, $target-size))
            $is-up = true
        else if (match($regex--and-down, $target-size))
            $is-up = false

        $start = $is-up ? $key-index : 0
        $end = $is-up ? length($breakpoint-hierarchy) - 1 : $key-index
        $sels = ''

        for num in $start .. $end
            $thisKey = $breakpoint-hierarchy[num]
            $thisValue = getClass($thisKey)
            $result = '.' + $thisValue + ' &'

            {$ROOT + $result}
                {block}

span
    +Override(xs)
        width: 10px